user www-data;
pid /var/run/nginx.pid;

# This number should be, at maximum, the number of CPU cores on your system.
# (since nginx doesn't benefit from more than one worker per CPU.)
worker_processes 1;

# Number of file descriptors used for Nginx
worker_rlimit_nofile 200000;

events {
  # Determines how many clients will be served by each worker process.
  # (Max clients = worker_connections * worker_processes)
  # "Max clients" is also limited by the number of socket connections available
  # on the system (~64k)
  worker_connections 4096;

  # Essential for linux, optmized to serve many clients with each thread
  use epoll;

  # Accept as many connections as possible, after nginx gets notification about
  # a new connection. May flood worker_connections, if that option is set too
  # low.
  multi_accept on;
}

http {
  ### Basic Settings

  index                    index.php index.html;
  client_max_body_size     1024m;
  types_hash_max_size      2048;
  server_tokens            off;
  port_in_redirect         off;

  # Sendfile copies data between one FD and other from within the kernel.
  # More efficient than read() + write(), since the requires transferring data
  # to and from the user space.
  sendfile                 on;

  # Tcp_nopush causes nginx to attempt to send its HTTP response head in one
  # packet, instead of using partial frames. This is useful for prepending
  # headers before calling sendfile, or for throughput optimization.
  tcp_nopush               on;

  # don't buffer data-sends (disable Nagle algorithm). Good for sending frequent
  # small bursts of data in real time.
  tcp_nodelay              on;

  # Timeout for keep-alive connections. Server will close connections after this
  # time.
  keepalive_timeout        20;

  # Send the client a "request timed out" if the body is not loaded by this
  # time. Default 60.
  client_body_timeout      15;

  # If the client stops reading data, free up the stale client connection after
  # this much time. Default 60.
  send_timeout             10;

  ### FastCGI Settings

  fastcgi_send_timeout 1800s;
  fastcgi_read_timeout 1800s;

  ### MIME type handling

  include                  /etc/nginx/mime.types;
  default_type             application/octet-stream;

  ### Logging Settings

  # Get access logs from varnish
  access_log               /var/log/nginx/access.log;

  # We want error logs though
  error_log                /var/log/nginx/error.log;

  ### GZIP compression ettings

  # Gzip MUST be disabled for ESI pages or Varnish will crash. As a hack, we
  # disable it for everything for now.
  gzip off;

  ### Virtual Host Configs

  include /etc/nginx/sites/*;
}
